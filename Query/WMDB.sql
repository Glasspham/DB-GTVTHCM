USE WMDB;

-- 5.1. ALL THE PRODUCTS OF CATEGORY ID = ”C02”.
SELECT * 
FROM PRODUCT 
WHERE CATEGORYID = 'C02';

-- 5.2. ALL THE WAREHOUSES (*) THAT STORE CATEGORY ID = ”C01”.
SELECT * 
FROM WAREHOUSE 
WHERE CATEGORYID = 'C01';

-- 5.3. ALL THE WAREHOUSES (*) IN NOW STORE PRODUCT NAME = ”BEVERAGE”.
SELECT DISTINCT W.* 
FROM WAREHOUSE W
JOIN INSTOCK I ON W.WAREHOUSEID = I.WAREHOUSEID
JOIN PRODUCT P ON I.PRODUCTID = P.PRODUCTID
WHERE P.PRODUCTNAME = 'BEVERAGE';

-- 5.4. ALL THE PRODUCTS, IT CAN BE STORE IN WAREHOUSE ID = ”W01”.
SELECT P.*
FROM PRODUCT P
JOIN WAREHOUSE W ON P.CATEGORYID = W.CATEGORYID
WHERE W.WAREHOUSEID = 'W01';

-- 5.5. CALCULATING SUM OF QUANTITY FOR EACH WAREHOUSES.
SELECT WAREHOUSEID, SUM(QUANTITY) AS TOTALQUANTITY
FROM INSTOCK
GROUP BY WAREHOUSEID;

-- 5.6. FIND WAREHOUSE HAVE THE LARGEST TOTAL QUANTITIES.
SELECT WAREHOUSEID
FROM INSTOCK
GROUP BY WAREHOUSEID
ORDER BY SUM(QUANTITY) DESC
LIMIT 1;

-- 5.7. CALCULATING COUNT OF PRODUCT FOR EACH WAREHOUSE.
SELECT WAREHOUSEID, COUNT(PRODUCTID) AS TOTALPRODUCTS
FROM INSTOCK
GROUP BY WAREHOUSEID;

-- 5.8. FIND WAREHOUSES HAVE THE LARGEST NUMBER OF PRODUCT.
SELECT WAREHOUSEID
FROM INSTOCK
GROUP BY WAREHOUSEID
ORDER BY COUNT(PRODUCTID) DESC
LIMIT 1;

-- 5.9. CALCULATING SUM OF QUANTITY FOR EACH PRODUCT.
SELECT PRODUCTID, SUM(QUANTITY) AS TOTALQUANTITY
FROM INSTOCK
GROUP BY PRODUCTID;

-- 5.10. SHOW PRODUCTS HAVE THE LARGEST TOTAL OF QUANTITIES.
SELECT PRODUCTID
FROM INSTOCK
GROUP BY PRODUCTID
ORDER BY SUM(QUANTITY) DESC
LIMIT 1;

-- 5.11. VALUE OF GOODS IN EACH WAREHOUSE
SELECT WAREHOUSEID, SUM(UNITPRICE * QUANTITY) 
FROM INSTOCK A, PRODUCT B
WHERE A.`PRODUCTID`=B.`PRODUCTID`
GROUP BY WAREHOUSEID;

-- ITEM NOT IN STOCK
SELECT *
FROM PRODUCT
WHERE `PRODUCTID` NOT IN(
    SELECT `PRODUCTID`
    FROM `INSTOCK`
);

SELECT `PRODUCTID`
FROM WAREHOUSE A, PRODUCT B
WHERE `WAREHOUSEID`='W01' AND A.`CATEGORYID`=B.`CATEGORYID`;